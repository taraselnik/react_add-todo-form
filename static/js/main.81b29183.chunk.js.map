{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","id","className","href","email","name","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","todosAndUsers","App","useState","setUserId","setTitle","availableTodos","setAvailableTodos","errorUser","setErrorUser","errorTitle","setErrorTitle","langCheckTitle","setLangCheckTitle","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","forCheckTitle","match","newTodo","Math","max","current","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81b29183.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    data-id={user.id}\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodosAndUsers } from '../../types/todosAndUsers';\n\ntype Props = {\n  todo: TodosAndUsers,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { TodosAndUsers } from '../../types/todosAndUsers';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodosAndUsers[],\n};\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))\n    }\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodosAndUsers } from './types/todosAndUsers';\nimport { User } from './types/user';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => userId === user.id) || null;\n}\n\nfunction addNewTodoId(todos: TodosAndUsers[]): number {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n\nconst todosAndUsers = todosFromServer.map((todo) => ({\n  ...todo,\n  user: findUserById(todo.id),\n}));\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [availableTodos, setAvailableTodos] = useState(todosAndUsers);\n\n  const [errorUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [langCheckTitle, setLangCheckTitle] = useState(false);\n\n  const resetState = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n    const inpFormat = /[^a-zA-Z0-9' '\\u0410-\\u044F\\u0406\\u0456\\u0407\\u0457]/gi;\n    const forCheckTitle = !trimmedTitle.match(inpFormat);\n\n    setErrorUser(!userId);\n    setErrorTitle(!trimmedTitle);\n    setLangCheckTitle(!forCheckTitle);\n\n    if (userId && trimmedTitle && forCheckTitle) {\n      const newTodo: TodosAndUsers = {\n        id: addNewTodoId(availableTodos),\n        title,\n        completed: false,\n        userId,\n        user: findUserById(userId),\n      };\n\n      setAvailableTodos(current => [...current, newTodo]);\n\n      resetState();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setErrorTitle(false);\n                setLangCheckTitle(false);\n              }}\n            />\n          </label>\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n          {langCheckTitle\n            && (\n              <span className=\"error\">\n                Please enter in English or Ukrainian and don&apos;t use symbols\n              </span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => {\n                setUserId(+event.target.value);\n                setErrorUser(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={availableTodos} />\n      {/* <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n      </section> */}\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}